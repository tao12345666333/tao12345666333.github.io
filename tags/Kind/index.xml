<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kind on MoeLove</title><link>https://moelove.info/tags/Kind/</link><description>Recent content in Kind on MoeLove</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Wed, 05 Feb 2020 12:14:04 +0800</lastBuildDate><atom:link href="https://moelove.info/tags/Kind/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 Kind 在离线环境创建 K8S 集群</title><link>https://moelove.info/2020/02/05/%E4%BD%BF%E7%94%A8-Kind-%E5%9C%A8%E7%A6%BB%E7%BA%BF%E7%8E%AF%E5%A2%83%E5%88%9B%E5%BB%BA-K8S-%E9%9B%86%E7%BE%A4/</link><pubDate>Wed, 05 Feb 2020 12:14:04 +0800</pubDate><guid>https://moelove.info/2020/02/05/%E4%BD%BF%E7%94%A8-Kind-%E5%9C%A8%E7%A6%BB%E7%BA%BF%E7%8E%AF%E5%A2%83%E5%88%9B%E5%BB%BA-K8S-%E9%9B%86%E7%BE%A4/</guid><description>Kind 是我很喜欢也一直在参与的项目，我计划将 Kind 相关的文章写成一个系列。这是第二篇。
背景 Kind 是 Kubernetes In Docker 的缩写，顾名思义是使用 Docker 容器作为 Node 并将 Kubernetes 部署至其中的一个工具。现在包括 Kubernetes 自身在内的很多云原生基础项目都将 Kind 应用于自身的 e2e 测试或项目的入门示例中。
默认情况下使用 Kind 创建 Kubernetes 集群，只需要先安装好 Kind 执行 kind create cluster 便可， Kind 会自动下载所需的 Docker 镜像，并启动集群。
但是，在某些情况下，我们也会有需要在离线环境中启动 Kubernetes 集群的需求。本篇文章我来为你介绍两种使用 Kind 在离线环境创建 Kubernetes 集群的方式。
使用预构建镜像 Kind 在每次发布版本时，会同时构建并发布默认使用的镜像，目前托管在 Docker Hub 上。建议你使用在每次 ReleaseNote 中指定了 shasum 的镜像。
当你在离线环境中想要使用 Kind 预构建的镜像创建集群时，你可以在任意可联网的机器上或目标机器上有网络的情况下，提前下载该镜像，并拷贝至需要创建集群的目标机器上。
如果你的机器上已经安装了 Docker，那可以直接使用 docker pull 命令下载镜像：
(MoeLove) ➜ ~ docker pull kindest/node:v1.</description></item><item><title>使用 Kind 搭建你的本地 Kubernetes 集群</title><link>https://moelove.info/2019/03/25/%E4%BD%BF%E7%94%A8-Kind-%E6%90%AD%E5%BB%BA%E4%BD%A0%E7%9A%84%E6%9C%AC%E5%9C%B0-Kubernetes-%E9%9B%86%E7%BE%A4/</link><pubDate>Mon, 25 Mar 2019 21:30:24 +0800</pubDate><guid>https://moelove.info/2019/03/25/%E4%BD%BF%E7%94%A8-Kind-%E6%90%AD%E5%BB%BA%E4%BD%A0%E7%9A%84%E6%9C%AC%E5%9C%B0-Kubernetes-%E9%9B%86%E7%BE%A4/</guid><description>Kind 是我很喜欢也一直在参与的项目，我计划将 Kind 相关的文章写成一个系列。（flag++） 这是第一篇。
Kind 介绍 Kind 是 Kubernetes In Docker 的缩写，顾名思义是使用 Docker 容器作为 Node 并将 Kubernetes 部署至其中的一个工具。官方文档中也把 Kind 作为一种本地集群搭建的工具进行推荐。
安装 二进制安装 Kind 使用 Golang 进行开发，在仓库的 Release 页面，已经上传了构建好的二进制，支持多种操作系统，可直接按需下载进行使用。
e.g.
# 下载最新的 0.2.0 版本 wget -O /usr/local/bin/kind https://github.com/kubernetes-sigs/kind/releases/download/0.2.0/kind-linux-amd64 &amp;amp;&amp;amp; chmod +x /usr/local/bin/kind 通过源码安装 如果你本地已经配置好了 Golang 的开发环境，那你可以直接通过源码进行安装。
e.g.
go get -u sigs.k8s.io/kind 运行完上述命令后，会将 kind 的可执行文件放到 $(go env GOPATH)/bin 文件夹内，你可能需要将此目录加入到 $PATH 中。
或者也可以先 clone 源代码再通过 go build 进行构建。</description></item></channel></rss>